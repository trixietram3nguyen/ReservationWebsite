# Add new customer
# Check if the email customer enter for sign up already existed
query = customers.count({"email":"lungrob10@yahoomail.com"})  #count the info in the database
if query != 0:
    # If yes (meaning there is 0 number of that info in the database) -> print error and ask to enter new email
    # print("There is " + str(query) + " result found. ")
    print("Enter another email")
else:
    # Else no -> insert new customer info into the database
    # result = customers.update({"email":"lungrob10@yahoomail.com"},{"$set":{"first_name":"Robber", "last_name":"Lunge", "email":"lungrob10@yahoomail.com", "pass":"Lungigi!"}},upsert=True)
    result = customers.insert({"first_name":"Robber", "last_name":"Lunge", "email":"lungrob10@yahoomail.com", "pass":"Lungigi!"})
    print("New customer inserted")

--------------------------------
# Check Sign-In
password = "Lungigi!"
# check if email is valid (meaning available in the system)
query = customers.count({"email":"lungrob10@yahoomail.com"})  #count the info in the database
if query != 0:
    # if yes -> check password
    query = customers.find({"email":"lungrob10@yahoomail.com"},{"pass":1,"_id":0})

    for result in query:
        db_password = result['pass']
    
    if password == db_password:
        # if password match -> proceed to log in
        print("...Logging in")
    else:
        # else promt incorrect password
        print("Incorrect password!")
else:
    # else no -> promt user not valid
    print("Incorrect email!")

--------------------------------
# Update profile info
email = "tx3rry@hotmail.com"
points = 0
preferred_diner = "2"
card_num = "1234567890987654"
exp_date = "09/24"
cvv = "945"
preferred_card = "yes"
preferred_diner = "2"
mailing_address = ["19678 Magnolia Ln","Houston","texas","77088"]
billing = True         #default billing to be same as mailling address

# check if billing address is the same as mailing address 
#*****This will have to deal with check box
if billing:
    print("Same, use mailing address")
    billing_address = mailing_address
else:
    print("Set new billing address")
    billing_address = ["street","city","state","zip"]

# update customer info base on their email since there is only 1 email for each profile
customers.update_one({"email":"tx3rry@hotmail.com"},
                {"$set":{"mailing_address":{"street":mailing_address[0],"city":mailing_address[1],"state":mailing_address[2],"zip":mailing_address[3]},
                "billing_address":{"street":billing_address[0],"city":billing_address[1],"state":billing_address[2],"zip":billing_address[3]},
                "points":points,"preferred":preferred_card,"preferred_diner":preferred_diner}})

--------------------------------
# Get customer name from email
query = customers.find({"email":"rtq.nguyen12@gmail.com"},{"first_name":1,"last_name":1,"_id":0})
for result in query:
    print(result)

name = result['first_name'] + " " + result['last_name']
print(name)

--------------------------------
# Point system update
point = 5
query = customers.update({"email":"lungrob10@yahoomail.com"},{"$set":{"points":point}})

--------------------------------
# Adding reservation confirmation into the customer info
query = db.customers.update({"email":"tx3rry@hotmail.com"},{"$push":{"confirmation":confirmation}})

--------------------------------
# Getting information of the customer for the profile page
email = "rtq.nguyen12@gmail.com"

query = customers.find({"email":"rtq.nguyen12@gmail.com"})
for result in query:
    profile = result

pf_firstName = profile['first_name']
pf_lastName = profile['last_name']
pf_email = profile['email']
pf_pass = profile['pass']
pf_mailingAdd = profile['mailing_address']
pf_billingAdd = profile['billing_address']
pf_phone = profile['phone']
pf_pmt = profile['preferred_pmt']
pf_points = profile['points']
pf_diner = profile['preferred_diner']

print(pf_firstName + "\n")
print(pf_lastName + "\n")
print(pf_email + "\n")
print(pf_pass + "\n")
print(pf_mailingAdd)
print(pf_mailingAdd['street'])
print(pf_mailingAdd['city'])
print(pf_mailingAdd['state'])
print(pf_mailingAdd['zip'])
print("\n")
print(pf_billingAdd)
print(pf_billingAdd['street'])
print(pf_billingAdd['city'])
print(pf_billingAdd['state'])
print(pf_billingAdd['zip'])
print("\n")
print(pf_phone)
print("\n")
print(pf_pmt)
print("\n")
print(pf_points)
print("\n")
print(pf_diner + "\n")